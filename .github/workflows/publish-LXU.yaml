name: Publish all LXU docker images to GHCR

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'New version number'
        required: true
        type: string

  workflow_call:
    inputs:
      tag:
        description: 'New version number'
        required: true
        type: string
        
# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kraanter/coderunner

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  push-amd64:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Push all images in the LXU directory
        run: find ./LXU -type d -mindepth 1 -exec bash -c 'dir="${0:2}"; dir_lowercase="${dir,,}";cd "$0" && docker build --push --tag ghcr.io/${{ env.IMAGE_NAME }}/"$dir_lowercase":${{ inputs.tag }} --tag ghcr.io/${{ env.IMAGE_NAME }}/"$dir_lowercase":latest .' {} \;
      - name: Cleanup docker images
        run: docker image prune -f -a

  push-arm64:
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Push all images in the LXU directory
        run: find ./LXU -type d -mindepth 1 -exec bash -c 'dir="${0:2}"; dir_lowercase="${dir,,}";cd "$0" && docker build --push --platform linux/arm64/v8 --tag ghcr.io/${{ env.IMAGE_NAME }}/"$dir_lowercase":${{ inputs.tag }} --tag ghcr.io/${{ env.IMAGE_NAME }}/"$dir_lowercase":latest .' {} \;
      - name: Cleanup docker images
        run: docker image prune -f -a
